server:
  port: 8199

spring:
  application:
    name: Consumer-Replicas-Consume
  rabbitmq:
    host: 192.168.3.128
    port: 5672
    virtual-host: /
    username: Javon
    password: 12345
    listener:
      simple:
        prefetch: 1 #消费预取 限制 >> 每次只能获取一条消息，处理完成才能获取下一个消息
  cloud:
    nacos:
      server-addr: localhost:8848 # nacos服务地址

      discovery:
        cluster-name: SZ #这里是Nacos的服务集群
#        namespace: 551af870-c7da-4ea3-bbb2-077487b1f485 #这里是Nacos的命名隔离空间,填唯一ID
    sentinel:
      transport:
        dashboard: localhost:8850 # sentinel服务地址


feign:
  sentinel:
    enabled: true #开启Feign的Sentinel


  #feign连接池管理配置
  httpclient:
    enabled: true
    connection-timeout: 300000
    max-connections: 200
    max-connections-per-route: 50

  #Nacos 服务，划分服务器集群的负载均衡规则
  Consumer_Replicas_Consume:
    ribbon:
      NFLoadBalanceRuleClassName: com.alibaba.cloud.nacos.ribbon.NacoRule

seata:
#  config:
#    type: nacos
#    nacos:
#      server-addr: 127.0.0.1:8848
#      username: nacos
#      password: nacos
#      group: SEATA_GROUP
#      data-id: client.properties
  registry: # TC服务注册中心的配置，微服务根据这些信息去注册中心获取tc服务地址
    # 参考tc服务自己的registry.conf中的配置
    type: nacos
    nacos: # tc
      server-addr: 127.0.0.1:8848
      namespace: ""
      group: DEFAULT_GROUP
      application: seata-server-tc # tc服务在nacos中的服务名称
      username: nacos
      password: nacos
  #      cluster: SZ
  tx-service-group: seata-demo # 事务组，根据这个获取tc服务的cluster名称
  service:
    vgroup-mapping: # 事务组与TC服务cluster的映射关系
      seata-demo: SZ

  data-source-proxy-mode: XA #开启数据源代理XA模式


