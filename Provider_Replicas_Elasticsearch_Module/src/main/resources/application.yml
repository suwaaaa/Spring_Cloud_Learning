server:
  port: 8089

spring:
  application:
    name: Provider-Replicas-Elasticsearch
  datasource:
    url: jdbc:mysql://192.168.3.128:3306/mysql?useSSL=false&characterEncoding=utf-8
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: 123
  cloud:
    nacos:
      server-addr: localhost:8848 # nacos服务地址
      discovery:
        cluster-name: SZ #这里是Nacos的服务集群
#        namespace: 551af870-c7da-4ea3-bbb2-077487b1f485 #这里是Nacos的命名隔离空间,填唯一ID
    sentinel:
      transport:
        dashboard: localhost:8850 # sentinel服务地址

  #虚拟机Vmware CentOS 7 下的 NAT 连接 IP
  rabbitmq:
    host: 192.168.3.128
    username: Javon
    password: 12345
    virtual-host: /
    port: 5672

feign:
  sentinel:
    enabled: true #开启Feign的Sentinel
  httpclient:
    connection-timeout: 300000
    enabled: true
    max-connections: 200
    max-connections-per-route: 50



mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
  type-aliases-package: ESApplication.Pojo
  global-config:
    db-config:
      insert-strategy: not_null
      update-strategy: not_null
      id-type: auto

seata:
#  config:
#    type: nacos
#    nacos:
#      server-addr: 127.0.0.1:8848
#      username: nacos
#      password: nacos
#      group: SEATA_GROUP
#      data-id: client.properties
  registry: # TC服务注册中心的配置，微服务根据这些信息去注册中心获取tc服务地址
    # 参考tc服务自己的registry.conf中的配置
    type: nacos
    nacos: # tc
      server-addr: 127.0.0.1:8848
      namespace: ""
      group: DEFAULT_GROUP
      application: seata-server-tc # tc服务在nacos中的服务名称
      username: nacos
      password: nacos
  #      cluster: SZ
  tx-service-group: seata-demo # 事务组，根据这个获取tc服务的cluster名称
  service:
    vgroup-mapping: # 事务组与TC服务cluster的映射关系
      seata-demo: SZ
  data-source-proxy-mode: XA #开启数据源代理XA模式
